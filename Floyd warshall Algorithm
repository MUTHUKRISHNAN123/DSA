import java.io.*;
import java.util.*;

public class Solution {
    
    public static void dijkstras(int[][] adjacency){
        int v = adjacency.length;
        boolean[] visited = new boolean[v];
        int distance[] = new int[v];
        
        distance[0] = 0;
        
        for(int i=1;i<v;i++){
            distance[i] = Integer.MAX_VALUE;
        }
        
        for(int i=0;i<v-1;i++){
            int minVertex = findminVertex(distance, visited);
            visited[minVertex] = true;
            
            for(int j=0;j<v;j++){
                if(adjacency[minVertex][j] != 0 && !visited[j] && distance[minVertex] != Integer.MIN_VALUE){
                    int newDistance = distance[minVertex] + adjacency[minVertex][j];
                    if(newDistance < distance[j]){
                        distance[j] = newDistance;
                    }
                }
            }
        }
        
        
        for(int i=0;i<v;i++){
                System.out.println(i + " " + distance[i]);
            }
    }

    
    public static int findminVertex(int[] distance, boolean[] visited){
        int minVertex = -1;
        for(int i=0;i<distance.length;i++){
            if(!visited[i] && (minVertex == -1 || distance[i] < distance[minVertex])){
                minVertex = i;
            }
        }
        return minVertex;
    }
    
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int V = s.nextInt();
        int E = s.nextInt();
        int [][]adjacency = new int[V][V];
        for(int i=0;i<E;i++){
            int v1 = s.nextInt();
            int v2 = s.nextInt();
            int weight = s.nextInt();
            adjacency[v1][v2] = weight;
            adjacency[v2][v1] = weight;
        }
        dijkstras(adjacency);
    }
}
